
---
################ Generic Oracle OS info ################
  oracle_user: oracle
  oracle_passwd: "$6$Udd3YYk2C2KGDOw4$jpfNsWXbgJ.IeKpEjIF4cVRhZi62xZT37G5oHHlHmGvAkkPHfukE9cgRyjdgui/oqtPodoYbUSSvTeFpwvN270"
  oracle_user_home: "/home/{{ oracle_user }}"
  oracle_group: dba
  oracle_user_id: 600
  oracle_group_id: 600
  oracle_sw_source: http://oladmin/orasw
  #oracle_sw_source: /path/to/files/locally
  disable_numa_boot: true            # (true/false) Sets numa=off in grub.conf
  percent_hugepages: 60              # Percentage (0-100) of total RAM to dedicate to hugepages, Configures vm.nr_hugepages & memlock settings in /etc/security/limits.conf
  configure_interconnect: true       # (true/false) Should the Interconnect network be configured by Ansible (setup IP-address. IP-address configurable by variable oracle_ic_net). Only applicable to RAC-installs
  configure_ssh: true                # (true/false). Should passwordless ssh be configured between clusternodes. Only applicable to RAC-installs
  
############### Generic Directory Structures ################
  oracle_stage: /u01/stage         # All software is place here
  oracle_psu_stage: /u01/stage/psu # All psu's are placed here
#  oracle_rsp_stage: /u01/stage/rsp # All responsefiles are placed here (gi,db,dbca,asmca etc)
  oracle_base: /u01/app/oracle
  oracle_inventory_loc: /u01/app/oraInventory

################ Grid Infrastructure specifics ################
  oracle_install_option_gi: CRS_CONFIG       # Valid (tested) values are: CRS_CONFIG, HA_CONFIG. Valid (untested) values are: UPGRADE, CRS_SWONLY)
  oracle_install_version: 12.1.0.2
  oracle_home_gi: "/u01/app/{{ oracle_install_version }}/grid"
  oracle_profile_name_gi: ".profile_grid"
  oracle_cluster_nodes: orarac01,orarac02    
  oracle_cluster_name: "orarac-cluster"
  oracle_sw_image_gi:                        # Files containing the installation media for Grid Infrastructure 
       - linuxamd64_12102_grid_1of2.zip
       - linuxamd64_12102_grid_2of2.zip

#  oracle_db_name: "<grid>"
  oracle_home_name_gi: "grid_{{ oracle_install_version }}"
  oracle_grid_responsefile: "grid_{{ oracle_cluster_name }}.rsp"
#  oracle_cluster_nodes: "{% for host in groups['orarac'] %} {{host}} {% if not loop.last %} , {% endif %} {% endfor %}"
  oracle_local_node: "{{ ansible_hostname }}"

################ Input for Grid Infrastructure responsefile ################
  oracle_password: Oracle123
  oracle_hostname: "{{ ansible_fqdn }}"
  oracle_scan: orarac-scan.discworld.net
  oracle_vip: -vip
  oracle_scan_port: 1521
  oracle_ic_net: 3.3.3.{{ ansible_all_ipv4_addresses[0].split(".")[-1] }}
  oracle_cluster_nodes_and_vips: orarac01.discworld.net:orarac01-vip.discworld.net, orarac02.discworld.net:orarac02-vip.discworld.net
# oracle_cluster_nodes_and_vips: "{% for host in groups['orarac'] %} {{host}}.{{ ansible_domain }}:{{ host }}{{ oracle_vip }}.{{ ansible_domain }} {% if not loop.last %} , {% endif %} {% endfor %}"
  oracle_cluster_interfaces: "eth0:{{ ansible_eth0.ipv4.network }}:1,eth1:{{ ansible_eth1.ipv4.network }}:5"
  oracle_cluster_mgmdb: TRUE
  oracle_asm_crs_diskgroup: CRS
  oracle_asm_crs_disks: "ORCL:CRS01"
#  oracle_asm_crs_disks: "  {% for disk in  storage_layout[crs]    %}  -disk 'ORCL:{{ disk.asmlabel }}' {% endfor %}"


################ Oracle databases and general config (ORACLE_BASE/HOME etc) ################
  oracle_cluster_nodes_db: "{{ oracle_cluster_nodes }}" ## Use when installing RAC/RACONE. Used in runInstaller responsefile for database-install (oracle.install.db.CLUSTER_NODES)
#  oracle_cluster_nodes_db: ""                            ## Use when installing single instance dbs. Used in runInstaller responsefile for database-install (oracle.install.db.CLUSTER_NODES)
 
  oracle_sw_image_db:
       - linuxamd64_12102_database_1of2.zip
       - linuxamd64_12102_database_2of2.zip

  oracle_databases:
        racdb:  # 'Last' directory in ORACLE_HOME path (e.g /u01/app/oracle/12.1.0.2/racdb)
             oracle_db_name: racdb
             oracle_db_passwd: Oracle123
             oracle_db_type: RAC
             is_container: "false"
             is_racone: "false"
             storage_type: ASM
             servicename: racdb_serv
             oracle_init_params: "open_cursors=300,processes=700"
             oracle_db_mem_percent: 30
             oracle_database_type: MULTIPURPOSE 
        racone:
             oracle_db_name: racone
             oracle_db_passwd: Oracle123
             oracle_db_type: RACONE
             is_container: "false"
             is_racone: "true"
             storage_type: ASM
             servicename: racone_serv
             oracle_init_params: "open_cursors=1000,processes=400"
             oracle_db_mem_percent: 20
             oracle_database_type: MULTIPURPOSE 

# The following variables are dependent on the 'oracle_databases' dict
  oracle_home_db: "{{ oracle_base }}/{{ oracle_install_version }}/{{ item.key }}"
  oracle_home_name_db: "{{ item.value.oracle_db_name }}_{{ oracle_clone_version }}"
  oracle_profile_name: ".profile_{{ item.value.oracle_db_name }}"
  oracle_db_responsefile: "{{ item.value.oracle_db_name}}_{{ oracle_local_node }}.rsp"

################ Create database info, feeds into dbca responsefile (via oradb-create role) ################
  oracle_dbca_rsp: "dbca_{{ item.value.oracle_db_name }}.rsp"
  oracle_dbf_dir_fs: "/u01/oradata/"
  oracle_reco_dir_fs: "/u01/fra/"
  oracle_dbf_dir_asm: "+DATA"
  oracle_reco_dir_asm: "+FRA"

################ Psu Information ################
#  oracle_psu_apply_db: false
#  oracle_psu_apply_gi: false
#  oracle_psu_num_gi: 18139660
#  oracle_psu_patch:
#       - p18139660_121010_Linux-x86-64.zip
#  oracle_ocm_rsp: ocm.rsp
#  oracle_opatch_patch: p6880880_121010_Linux-x86-64.zip

################ Storage/FS Layout ################
  host_fs_layout:    # Sets up filesystem on host.
      u01:
        {mntp: /u01, device: /dev/sdb, vgname: vgora, pvname: /dev/sdb1, lvname: lvora}

  diskgroups:        # ASM Diskgroups used for DB-storage. Should map to dict storage_layout
     - crs
     - data
     - fra

  storage_layout:    # Mapping between device & ASMlib label
   crs:
     - {device: /dev/sdc, asmlabel: CRS01}
   data:
     - {device: /dev/sdd, asmlabel: DATA01}
     - {device: /dev/sde, asmlabel: DATA02}
   fra:
     - {device: /dev/sdf, asmlabel: FRA01}
     - {device: /dev/sdg, asmlabel: FRA02}
     - {device: /dev/sdh, asmlabel: FRA03}
